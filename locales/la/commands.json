{
  "defaultError": "**Error incognitus occurrit:** Haec quaestio administratori relata est.",
  "deploy": {
    "error": "**Unknown Error**: Commands failed to deploy.",
    "success": "Commands deployed successfully."
  },
  "config": {
    "description": "Configurare Winnie_Bot ut obviam necessitates tuas.",
    "crossGuild": {
      "description": "Alios coetus bella videre permittit.",
      "get": {
        "description": "Alios coetus bella videre permittit.",
        "disabled": "Bella tua aliis **non** ostendentur.",
        "enabled": "Bella tua aliis ostendentur."
      },
      "reset": {
        "description": "Mutationes si aliae coetus bella tua videre possunt.",
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "success": "Mutatio successit. Bella tua aliis coetibus ostendent."
      },
      "set": {
        "description": "Decernit si bella tua aliis coetibus inspiciuntur.",
        "disabled": "Bella tua aliis **non** ostendentur.",
        "enabled": "Bella tua aliis ostendentur.",
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "args": {
          "enabled": "Verum (**true**) pro visibili; falsum (**false**) pro occultum."
        }
      }
    },
    "timezone": {
      "description": "Ponere et delere et ostendere tuam tempi zonam.",
      "get": {
        "description": "Tempi zona ostendit.",
        "success": "Tempi zona {{timezone}} est.",
        "error": {
          "notSet": "Non est tempi zona. Utere `/config timezone set` id ponere."
        }
      },
      "reset": {
        "description": "Tempi zona delet.",
        "success": "Tempi zona deleta est."
      },
      "set": {
        "description": "Tempi zona tua gignit vel mutat.",
        "success": "Tempi zona {{timezone}} est.",
        "args": {
          "timezone": "Vexillum IANA sequi debetis."
        },
        "error": {
          "invalidValue": "**Error occurrit:** Winnie_Bot IANA verba admittit. Ipsi tamquam `Continens/Maxima_Civitas` -- e.g., `America/New_York`, `Australia/Sydney`, `Europe/London`, or `Asia/Tokyo`."
        }
      }
    }
  },
  "goal": {
    "description": "Ponere et delere et ostendere metam.",
    "cancel": {
      "description": "Delet metam.",
      "success": "Metam deletum est.",
      "error": {
        "couldNotCancelGoal": "**Error incognitus occurrit:** Delere non potest. Datorum frangitur. Superos clama!",
        "noActiveGoal": "**Error occurrit:** Metam non habes."
      }
    },
    "info": {
      "description": "Metam ostendit.",
      "error": {
        "noActiveGoal": "**Error occurrit:** Metam non habes."
      }
    },
    "overwrite": {
      "description": "Progressum tuum cum novo numero substituit.",
      "args": {
        "progress": "Novus numerus. Profectum tuum mutat."
      },
      "error": {
        "couldNotOverwriteGoal": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "noActiveGoal": "**Error occurrit:** Metam non habes. Utere `/goal set` id ponere.",
        "overwriteMustNoBeNegative": "**Error occurrit:** Numerus negativus esse non potest."
      }
    },
    "reset": {
      "description": "Metam tibi mutat. Progressus idem manet, si meta eiusdem generis est.",
      "success": "Metam mutasti. \n\n{{goal}}",
      "args": {
        "duration": "`daily`, `weekly`, `monthly`, or `yearly`. Defaltam ad cottidianam. Utere vocibus Anglicis.",
        "target": "Quantum facies?",
        "type": "`items`, `lines`, `minutes`, `pages`, `words`. Defaltam ad verba. Utere vocibus Anglicis."
      },
      "error": {
        "couldNotResetGoal": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "timezoneNotSet": "**Error occurrit:** Tempi zonam non posueris. Utere `/config timezone set` id ponere."
      }
    },
    "set": {
      "description": "Novam metam ponit.",
      "success": "Novam metam posuisti. Feles gaudent! \n\n{{goal}}",
      "args": {
        "duration": "`daily`, `weekly`, `monthly`, or `yearly`. Defaltam ad cottidianam. Utere vocibus Anglicis.",
        "target": "Quantum facies?",
        "type": "`items`, `lines`, `minutes`, `pages`, `words`. Defaltam ad verba. Utere vocibus Anglicis."
      },
      "error": {
        "couldNotCreateGoal": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "goalAlreadyActive": "**Error occurrit:** Meta huius generis iam exstat. Utere `/goal reset` id mutatere.",
        "timezoneNotSet": "**Error occurrit:** Tempi zonam non posueris. Utere `/config timezone set` id ponere."
      }
    },
    "update": {
      "description": "Progressum tuum ad metam renovat.",
      "args": {
        "progress": "Numerum addere ad totalis."
      },
      "error": {
        "couldNotUpdateGoal": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "noActiveGoal": "**Error occurrit:** Metam non habes. Utere `/goal set` id ponere.",
        "totalMustBePositive": "**Error occurrit:** Numerus negativus esse non potest."
      }
    }
  },
  "server": {
    "description": "Configurare Winnie_Bot ut obviam necessitates tuas. **MANAGE SERVER** permissi.",
    "announcementsChannel": {
      "description": "Winnie_Bot hac via utitur pro nuntiis.",
      "get": {
        "description": "Nomen Via Annuntiationes.",
        "success": "Winnie_Bot in <#{{announcementsChannel}}> annuntiationes dices."
      },
      "reset": {
        "description": "Delere via pro annuntiationibus.",
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama",
        "success": "Prosperitas! Via remotus est."
      },
      "set": {
        "description": "Colligunt via pro annuntiationibus.",
        "success": "Winnie_Bot in <#{{announcementsChannel}}> annuntiationes dices.",
        "args": {
          "announcementsChannel": "Nomen viae (**channel**) pro annuntiationibus."
        },
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!"
      }
    },
    "crossGuild": {
      "description": "Alios coetus bella videre permittit, pro tota communitate.",
      "get": {
        "description": "Alios coetus bella videre permittit, pro tota communitate.",
        "disabled": "Bella tua aliis **non** ostendentur, pro tota communitate.",
        "enabled": "Bella tua aliis ostendentur, pro tota communitate."
      },
      "reset": {
        "description": "Mutationes si aliae coetus bella tua videre possunt, pro tota communitate.",
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "success": "Mutatio successit. Bella tua aliis coetibus ostendent, pro tota communitate."
      },
      "set": {
        "description": "Decernit si bella tua aliis coetibus inspiciuntur, pro tota communitate.",
        "disabled": "Bella tua aliis **non** ostendentur, pro tota communitate.",
        "enabled": "Bella tua aliis ostendentur, pro tota communitate.",
        "error": "**Error incognitus occurrit:** Mutatio esse non potest. Datorum frangitur. Superos clama!",
        "args": {
          "enabled": "Verum (**true**) pro visibili; falsum (**false**) pro occultum."
        }
      }
    },
    "locale": {
      "description": "Linguam eligit qua Winnie_Bot utitur in hac communitate.",
      "get": {
        "description": "Linguam hodiernam ostendit.",
        "success": "Winnie_Bot {{locale}} loquitur."
      },
      "reset": {
        "description": "Pro tota communitate, linguam Anglicam mutat.",
        "error": "**Error incognitus occurrit:** Winnie_Bot non loquitur lingua certa. Parlez vous Latin? (Datorum frangitur. Superos clama!)",
        "success": "Winnie_Bot Anglice nunc loquitur."
      },
      "set": {
        "description": "Elige novam linguam pro Winnie_Bot loqui.",
        "success": "Winnie_Bot nunc loquitur {{locale}}.",
        "args": {
          "locale": "ISO 639-1 codex."
        },
        "error": "**Error occurrit**: Lingua quam elegisti non est. (Datorum frangitur. Superos clama!)."
      }
    },
    "timezone": {
      "description": "Ponere et delere et ostendere tuam tempi zonam -- pro tota communitate.",
      "get": {
        "description": "Tempi zona pro tota communitate ostendit.",
        "success": "Tempi zona pro tota communitate est {{timezone}}.",
        "error": {
          "notSet": "Non est tempi zona pro tota communitate. Utere `/server timezone set` id ponere."
        }
      },
      "reset": {
        "description": "Tempi zona pro tota communitate delet.",
        "success": "Tempi zona pro tota communitate deleta est."
      },
      "set": {
        "description": "Tempi zona pro tota communitate gignit vel mutat.",
        "success": "Tempi zona pro tota communitate est {{timezone}}.",
        "args": {
          "timezone": "Vexillum IANA sequi debetis."
        },
        "error": {
          "invalidValue": "**Error occurrit:** Winnie_Bot IANA verba admittit. Ipsi tamquam `Continens/Maxima_Civitas` -- e.g., `America/New_York`, `Australia/Sydney`, `Europe/London`, or `Asia/Tokyo`."
        }
      }
    }
  },
  "challenge": {
    "description": "Challenge yourself! Race to a certain number of words, or war for words in a given time.",
    "cancel": {
      "description": "Cancels a challenge.",
      "success": "{{ challengeName }} (ID {{ id }}) has been cancelled.",
      "args": {
        "id": "The ID of the challenge that you want to cancel."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "challengeHasAlreadyStarted": "**Error**: Challenge {{ id }} has already started!",
        "couldNotCancelChallenge": "**Unknown Error**: Could not cancel challenge {{ id }} (database validation error).",
        "userIsNotOwner": "**Error**: Only the creator of {{ challengeName }} (ID {{ id }}) can cancel the challenge."
      }
    },
    "finish": {
      "description": "Sets your finish time for a race.",
      "success": "You completed {{ challengeName }} (ID {{ id }}) in {{ completionTime }} minutes.",
      "args": {
        "id": "The ID of the race that you just finished."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "challengeHasNotStarted": "**Error**: Challenge {{ id }} has not started yet!",
        "challengeIsNotRace": "You can only set finish times for races.  Use `/challenge total` to set your total for a war.",
        "couldNotFinishChallenge": "**Unknown Error**: Could not finish race {{ id }} (database validation error).",
        "noChallengeSpecified": "**Error**: I don't know which race to finish!  Use `/challenge finish` with an ID number to finish a specific race."
      }
    },
    "join": {
      "description": "Joins a challenge.",
      "success": "You have joined {{ challengeName }} (ID {{ id }}).",
      "args": {
        "id": "The ID of the challenge that you want to join."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "challengeAlreadyJoined": "**Error**: You have already joined challenge {{ id }}, and cannot join another.",
        "couldNotJoinChallenge": "**Unknown Error**: Could not join challenge {{ id }} (database validation error)."
      }
    },
    "leave": {
      "description": "Leaves the challenge that you have joined.",
      "success": "You have left {{ challengeName }} ( ID {{ id }}).",
      "error": {
        "couldNotLeaveChallenge": "**Unknown Error**: Could not leave challenge {{ id }} (database validation error).",
        "noActiveChallenge": "**Error**: You haven't joind a challenge yet."
      }
    },
    "list": {
      "description": "Lists all running challenges.",
      "args": {
      },
      "error": {
        "couldNotListChallenges": "**Unknown Error**: Could not list challenges (database validation error)."
      }
    },
    "start": {
      "description": "Creates a new challenge.",
      "args": {
        "duration": "`daily`, `weekly`, `monthly`, or `yearly`. Defaults to daily.",
        "target": "The total you plan to achieve.",
        "type": "`items`, `lines`, `minutes`, `pages`, `words`. Defaults to words."
      },
      "error": {
        "challengeNameHasMentions": "**Error**: Challenge names cannot contain Discord objects (users, roles, channels, etc).",
        "challengeNameHasProfanity": "**Error**: Challenge names cannot contain profanity.",
        "challengeNameHasURL": "**Error**: Challenge names cannot contain URLs.",
        "challengeNameTooLong": "**Error**: Challenge names must be 150 characters or less.",
        "couldNotStartChallenge": "**Unknown Error**: Could not start a new challenge (database validation error)."
      }
    },
    "status": {
      "description": "Displays the current status of a challenge.",
      "args": {
        "id": "The ID of the challenge that you want to see the status of."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "couldNotGetStatus": "**Unknown Error**: Could not get status of challenge {{ id }} (database validation error)."
      }      
    },
    "summary": {
      "description": "Prints the summary of a challenge.",
      "args": {
        "id": "The ID of the challenge that you want the summary for."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "challengeIsActive": "**Error**: Challenge {{ id }} is still running!",
        "challengeNotStarted": "**Error**: Challenge {{ id }} has not started yet!",
        "couldNotPrintSummary": "**Unknown Error**: Could not print summary for challenge {{ id }} (database validation error)."
      }
    },
    "total": {
      "description": "Adds your total for a war or chain war.",
      "args": {
        "id": "The ID of the war that you want to post a total for.",
        "total": "The number of words that you wrote (or things that you did) during the war.",
        "type": "`items`, `lines`, `minutes`, `pages`, `words`. Defaults to words."
      },
      "error": {
        "challengeDoesNotExist": "**Error**: Challenge {{ id }} does not exist!",
        "challengeHasNotStarted": "**Error**: Challenge {{ id }} has not started yet!",
        "challengeIsRace": "**Error**: You cannot add a total to a race.  Use `/challenge finish` to complete a race.",
        "couldNotFinishChallenge": "**Unknown Error**: Could not add a total for war {{ id }} (database validation error).",
        "noChallengeSpecified": "**Error**: I don't know which war this total is for!  Use `/challenge total` with an ID number to post a total for a specific war."
      }
    }
  }
}